{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8080/api/submissions';\nexport const submissionService = {\n  evaluateSolution: async (problemId, submissionData) => {\n    try {\n      const url = `${BASE_URL}/evaluate/${problemId}`;\n      console.log('Making API call to:', url);\n      console.log('Request details:', {\n        method: 'POST',\n        url,\n        data: submissionData,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      const response = await axios.post(url, {\n        code: submissionData.code,\n        functionalRequirements: submissionData.functionalRequirements || \"\"\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      console.log('Response status:', response.status);\n      console.log('Response headers:', response.headers);\n      console.log('Response data:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('API call failed:', {\n        url: `${BASE_URL}/evaluate/${problemId}`,\n        error: error.message,\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n        config: error.config\n      });\n      throw error;\n    }\n  },\n  executeSolution: async submissionData => {\n    try {\n      const response = await axios.post(`${BASE_URL}/execute`, submissionData);\n      return response.data;\n    } catch (error) {\n      console.error('Execution error:', error);\n      throw error;\n    }\n  },\n  testConnection: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/test`);\n      return response.data;\n    } catch (error) {\n      console.error('Test connection error:', error);\n      throw error;\n    }\n  }\n};\nexport default submissionService;","map":{"version":3,"names":["axios","BASE_URL","submissionService","evaluateSolution","problemId","submissionData","url","console","log","method","data","headers","response","post","code","functionalRequirements","status","error","_error$response","_error$response2","message","config","executeSolution","testConnection","get"],"sources":["/Users/kritika.sinha/Documents/Machine Coding/machine-coding-practice/src/services/submissionService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:8080/api/submissions';\n\nexport const submissionService = {\n    evaluateSolution: async (problemId, submissionData) => {\n        try {\n            const url = `${BASE_URL}/evaluate/${problemId}`;\n            console.log('Making API call to:', url);\n            console.log('Request details:', {\n                method: 'POST',\n                url,\n                data: submissionData,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n\n            const response = await axios.post(url, {\n                code: submissionData.code,\n                functionalRequirements: submissionData.functionalRequirements || \"\"\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n\n            console.log('Response status:', response.status);\n            console.log('Response headers:', response.headers);\n            console.log('Response data:', response.data);\n            return response.data;\n        } catch (error) {\n            console.error('API call failed:', {\n                url: `${BASE_URL}/evaluate/${problemId}`,\n                error: error.message,\n                status: error.response?.status,\n                data: error.response?.data,\n                config: error.config\n            });\n            throw error;\n        }\n    },\n\n    executeSolution: async (submissionData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/execute`, submissionData);\n            return response.data;\n        } catch (error) {\n            console.error('Execution error:', error);\n            throw error;\n        }\n    },\n\n    testConnection: async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}/test`);\n            return response.data;\n        } catch (error) {\n            console.error('Test connection error:', error);\n            throw error;\n        }\n    }\n};\n\nexport default submissionService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uCAAuC;AAExD,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,gBAAgB,EAAE,MAAAA,CAAOC,SAAS,EAAEC,cAAc,KAAK;IACnD,IAAI;MACA,MAAMC,GAAG,GAAG,GAAGL,QAAQ,aAAaG,SAAS,EAAE;MAC/CG,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,GAAG,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE;QAC5BC,MAAM,EAAE,MAAM;QACdH,GAAG;QACHI,IAAI,EAAEL,cAAc;QACpBM,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC;MAEF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACP,GAAG,EAAE;QACnCQ,IAAI,EAAET,cAAc,CAACS,IAAI;QACzBC,sBAAsB,EAAEV,cAAc,CAACU,sBAAsB,IAAI;MACrE,CAAC,EAAE;QACCJ,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC;MAEFJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,QAAQ,CAACI,MAAM,CAAC;MAChDT,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,QAAQ,CAACD,OAAO,CAAC;MAClDJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEI,QAAQ,CAACF,IAAI,CAAC;MAC5C,OAAOE,QAAQ,CAACF,IAAI;IACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA;MACZZ,OAAO,CAACU,KAAK,CAAC,kBAAkB,EAAE;QAC9BX,GAAG,EAAE,GAAGL,QAAQ,aAAaG,SAAS,EAAE;QACxCa,KAAK,EAAEA,KAAK,CAACG,OAAO;QACpBJ,MAAM,GAAAE,eAAA,GAAED,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF,MAAM;QAC9BN,IAAI,GAAAS,gBAAA,GAAEF,KAAK,CAACL,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI;QAC1BW,MAAM,EAAEJ,KAAK,CAACI;MAClB,CAAC,CAAC;MACF,MAAMJ,KAAK;IACf;EACJ,CAAC;EAEDK,eAAe,EAAE,MAAOjB,cAAc,IAAK;IACvC,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGZ,QAAQ,UAAU,EAAEI,cAAc,CAAC;MACxE,OAAOO,QAAQ,CAACF,IAAI;IACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDM,cAAc,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMX,QAAQ,GAAG,MAAMZ,KAAK,CAACwB,GAAG,CAAC,GAAGvB,QAAQ,OAAO,CAAC;MACpD,OAAOW,QAAQ,CAACF,IAAI;IACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC;AAED,eAAef,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}