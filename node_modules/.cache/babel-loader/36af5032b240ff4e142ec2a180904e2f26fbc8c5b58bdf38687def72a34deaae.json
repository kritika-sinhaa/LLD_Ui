{"ast":null,"code":"import api from '../api/axiosConfig';\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080';\nexport const authService = {\n  login: async credentials => {\n    try {\n      const response = await api.post('/api/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response3;\n      throw {\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed',\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        details: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n      };\n    }\n  },\n  register: async userData => {\n    try {\n      console.log('Attempting registration with:', userData);\n      const registerUrl = `${API_URL}/api/auth/register`;\n      console.log('API URL:', registerUrl);\n      const response = await axios.post(registerUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Registration response:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response5;\n      console.error('Registration error details:', {\n        message: error.message,\n        response: error.response,\n        status: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status,\n        data: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data\n      });\n      throw error;\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","axios","API_URL","process","env","REACT_APP_API_BASE_URL","authService","login","credentials","response","post","data","error","_error$response","_error$response$data","_error$response2","_error$response3","message","status","details","register","userData","console","log","registerUrl","headers","_error$response4","_error$response5"],"sources":["/Users/kritika.sinha/Documents/machine-coding-practice/src/services/authService.js"],"sourcesContent":["import api from '../api/axiosConfig';\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080';\n\nexport const authService = {\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/api/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      throw {\n        message: error.response?.data?.message || 'Login failed',\n        status: error.response?.status,\n        details: error.response?.data\n      };\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      console.log('Attempting registration with:', userData);\n      const registerUrl = `${API_URL}/api/auth/register`;\n      console.log('API URL:', registerUrl);\n      \n      const response = await axios.post(registerUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Registration response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error details:', {\n        message: error.message,\n        response: error.response,\n        status: error.response?.status,\n        data: error.response?.data\n      });\n      throw error;\n    }\n  }\n};\n\nexport default authService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,oBAAoB;AACpC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAE7E,OAAO,MAAMC,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,iBAAiB,EAAEF,WAAW,CAAC;MAC/D,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACd,MAAM;QACJC,OAAO,EAAE,EAAAJ,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,cAAc;QACxDC,MAAM,GAAAH,gBAAA,GAAEH,KAAK,CAACH,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM;QAC9BC,OAAO,GAAAH,gBAAA,GAAEJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL;MAC3B,CAAC;IACH;EACF,CAAC;EAEDS,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;MACtD,MAAMG,WAAW,GAAG,GAAGtB,OAAO,oBAAoB;MAClDoB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEC,WAAW,CAAC;MAEpC,MAAMf,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAACc,WAAW,EAAEH,QAAQ,EAAE;QACvDI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEd,QAAQ,CAACE,IAAI,CAAC;MACpD,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAc,gBAAA,EAAAC,gBAAA;MACdL,OAAO,CAACV,KAAK,CAAC,6BAA6B,EAAE;QAC3CK,OAAO,EAAEL,KAAK,CAACK,OAAO;QACtBR,QAAQ,EAAEG,KAAK,CAACH,QAAQ;QACxBS,MAAM,GAAAQ,gBAAA,GAAEd,KAAK,CAACH,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBR,MAAM;QAC9BP,IAAI,GAAAgB,gBAAA,GAAEf,KAAK,CAACH,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBhB;MACxB,CAAC,CAAC;MACF,MAAMC,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}