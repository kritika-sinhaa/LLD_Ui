{"ast":null,"code":"import api from '../api/axiosConfig';\nexport const topicService = {\n  getAllTopics: async () => {\n    try {\n      console.log('Making API request to /api/topics');\n      const response = await api.get('/api/topics');\n      console.log('API response:', response);\n      return response.data;\n    } catch (error) {\n      console.error('Error in getAllTopics:', error);\n      throw error;\n    }\n  },\n  getTopicById: async id => {\n    try {\n      console.log('Making request to:', `/api/topics/${id}`);\n      const response = await api.get('/api/topics');\n      console.log('Response:', response);\n\n      // Find the specific topic in the array\n      const topic = response.data.find(t => t.id === parseInt(id));\n      console.log('Found topic:', topic);\n      if (!topic) {\n        throw new Error('Topic not found');\n      }\n      return {\n        ...topic,\n        title: topic.name\n      };\n    } catch (error) {\n      console.error('Error in getTopicById:', error);\n      throw error;\n    }\n  },\n  createTopic: async topicData => {\n    const response = await api.post('/api/topics', topicData);\n    return response.data;\n  }\n};\nexport default topicService;","map":{"version":3,"names":["api","topicService","getAllTopics","console","log","response","get","data","error","getTopicById","id","topic","find","t","parseInt","Error","title","name","createTopic","topicData","post"],"sources":["/Users/kritika.sinha/Documents/Machine Coding/machine-coding-practice/src/services/topicService.js"],"sourcesContent":["import api from '../api/axiosConfig';\n\nexport const topicService = {\n  getAllTopics: async () => {\n    try {\n      console.log('Making API request to /api/topics');\n      const response = await api.get('/api/topics');\n      console.log('API response:', response);\n      return response.data;\n    } catch (error) {\n      console.error('Error in getAllTopics:', error);\n      throw error;\n    }\n  },\n\n  getTopicById: async (id) => {\n    try {\n      console.log('Making request to:', `/api/topics/${id}`);\n      const response = await api.get('/api/topics');\n      console.log('Response:', response);\n      \n      // Find the specific topic in the array\n      const topic = response.data.find(t => t.id === parseInt(id));\n      console.log('Found topic:', topic);\n      \n      if (!topic) {\n        throw new Error('Topic not found');\n      }\n      return {\n        ...topic,\n        title: topic.name\n      };\n    } catch (error) {\n      console.error('Error in getTopicById:', error);\n      throw error;\n    }\n  },\n\n  createTopic: async (topicData) => {\n    const response = await api.post('/api/topics', topicData);\n    return response.data;\n  }\n};\n\nexport default topicService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,oBAAoB;AAEpC,OAAO,MAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,CAAC;MAC7CH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAAC;MACtC,OAAOA,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDC,YAAY,EAAE,MAAOC,EAAE,IAAK;IAC1B,IAAI;MACFP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,eAAeM,EAAE,EAAE,CAAC;MACtD,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,aAAa,CAAC;MAC7CH,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;;MAElC;MACA,MAAMM,KAAK,GAAGN,QAAQ,CAACE,IAAI,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKI,QAAQ,CAACJ,EAAE,CAAC,CAAC;MAC5DP,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEO,KAAK,CAAC;MAElC,IAAI,CAACA,KAAK,EAAE;QACV,MAAM,IAAII,KAAK,CAAC,iBAAiB,CAAC;MACpC;MACA,OAAO;QACL,GAAGJ,KAAK;QACRK,KAAK,EAAEL,KAAK,CAACM;MACf,CAAC;IACH,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDU,WAAW,EAAE,MAAOC,SAAS,IAAK;IAChC,MAAMd,QAAQ,GAAG,MAAML,GAAG,CAACoB,IAAI,CAAC,aAAa,EAAED,SAAS,CAAC;IACzD,OAAOd,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}