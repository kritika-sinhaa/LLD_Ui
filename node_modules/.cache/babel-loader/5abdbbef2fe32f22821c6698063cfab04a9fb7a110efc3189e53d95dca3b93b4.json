{"ast":null,"code":"import api from '../api/axiosConfig';\nimport axios from 'axios';\n\n// Temporary hardcoded URL for testing\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080';\nconsole.log('Environment:', {\n  nodeEnv: process.env.NODE_ENV,\n  apiUrl: process.env.REACT_APP_API_BASE_URL,\n  finalUrl: API_URL\n});\nexport const authService = {\n  login: async credentials => {\n    try {\n      console.log('Attempting login with:', {\n        ...credentials,\n        password: '[REDACTED]'\n      });\n      console.log('Login API URL:', `${API_URL}/api/auth/login`);\n      const response = await axios.post(`${API_URL}/api/auth/login`, credentials, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Login response:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Login error details:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      });\n      throw error;\n    }\n  },\n  register: async userData => {\n    try {\n      console.log('Attempting registration with:', userData);\n      const registerUrl = `${API_URL}/api/auth/register`;\n      console.log('API URL:', registerUrl);\n      const response = await axios.post(registerUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Registration response:', response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response4;\n      console.error('Registration error details:', {\n        message: error.message,\n        response: error.response,\n        status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n        data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data\n      });\n      throw error;\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","axios","API_URL","process","env","REACT_APP_API_BASE_URL","console","log","nodeEnv","NODE_ENV","apiUrl","finalUrl","authService","login","credentials","password","response","post","headers","data","error","_error$response","_error$response2","message","status","register","userData","registerUrl","_error$response3","_error$response4"],"sources":["/Users/kritika.sinha/Documents/Machine Coding/machine-coding-practice/src/services/authService.js"],"sourcesContent":["import api from '../api/axiosConfig';\nimport axios from 'axios';\n\n// Temporary hardcoded URL for testing\nconst API_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080';\n\nconsole.log('Environment:', {\n  nodeEnv: process.env.NODE_ENV,\n  apiUrl: process.env.REACT_APP_API_BASE_URL,\n  finalUrl: API_URL\n});\n\nexport const authService = {\n  login: async (credentials) => {\n    try {\n      console.log('Attempting login with:', {\n        ...credentials,\n        password: '[REDACTED]'\n      });\n      console.log('Login API URL:', `${API_URL}/api/auth/login`);\n\n      const response = await axios.post(`${API_URL}/api/auth/login`, credentials, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Login response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Login error details:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status\n      });\n      throw error;\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      console.log('Attempting registration with:', userData);\n      const registerUrl = `${API_URL}/api/auth/register`;\n      console.log('API URL:', registerUrl);\n      \n      const response = await axios.post(registerUrl, userData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Registration response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error details:', {\n        message: error.message,\n        response: error.response,\n        status: error.response?.status,\n        data: error.response?.data\n      });\n      throw error;\n    }\n  }\n};\n\nexport default authService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,oBAAoB;AACpC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAE7EC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;EAC1BC,OAAO,EAAEL,OAAO,CAACC,GAAG,CAACK,QAAQ;EAC7BC,MAAM,EAAEP,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC1CM,QAAQ,EAAET;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMU,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,IAAI;MACFR,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;QACpC,GAAGO,WAAW;QACdC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFT,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,GAAGL,OAAO,iBAAiB,CAAC;MAE1D,MAAMc,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,GAAGf,OAAO,iBAAiB,EAAEY,WAAW,EAAE;QAC1EI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFZ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAES,QAAQ,CAACG,IAAI,CAAC;MAC7C,OAAOH,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA;MACdhB,OAAO,CAACc,KAAK,CAAC,sBAAsB,EAAE;QACpCG,OAAO,EAAEH,KAAK,CAACG,OAAO;QACtBP,QAAQ,GAAAK,eAAA,GAAED,KAAK,CAACJ,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBF,IAAI;QAC9BK,MAAM,GAAAF,gBAAA,GAAEF,KAAK,CAACJ,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBE;MAC1B,CAAC,CAAC;MACF,MAAMJ,KAAK;IACb;EACF,CAAC;EAEDK,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACFpB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEmB,QAAQ,CAAC;MACtD,MAAMC,WAAW,GAAG,GAAGzB,OAAO,oBAAoB;MAClDI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEoB,WAAW,CAAC;MAEpC,MAAMX,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAACU,WAAW,EAAED,QAAQ,EAAE;QACvDR,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAES,QAAQ,CAACG,IAAI,CAAC;MACpD,OAAOH,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAQ,gBAAA,EAAAC,gBAAA;MACdvB,OAAO,CAACc,KAAK,CAAC,6BAA6B,EAAE;QAC3CG,OAAO,EAAEH,KAAK,CAACG,OAAO;QACtBP,QAAQ,EAAEI,KAAK,CAACJ,QAAQ;QACxBQ,MAAM,GAAAI,gBAAA,GAAER,KAAK,CAACJ,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBJ,MAAM;QAC9BL,IAAI,GAAAU,gBAAA,GAAET,KAAK,CAACJ,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBV;MACxB,CAAC,CAAC;MACF,MAAMC,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}