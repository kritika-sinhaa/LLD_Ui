{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8080/api/submissions';\nexport const submissionService = {\n  evaluateSolution: async (problemId, submissionData) => {\n    try {\n      const response = await axios.post(`${BASE_URL}/evaluate/${problemId}`, {\n        code: submissionData.code,\n        functionalRequirements: submissionData.functionalRequirements || \"\"\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Evaluation error:', error);\n      throw error;\n    }\n  },\n  testConnection: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/test`);\n      return response.data;\n    } catch (error) {\n      console.error('Test connection error:', error);\n      throw error;\n    }\n  }\n};\nexport default submissionService;","map":{"version":3,"names":["axios","BASE_URL","submissionService","evaluateSolution","problemId","submissionData","response","post","code","functionalRequirements","headers","data","error","console","testConnection","get"],"sources":["/Users/kritika.sinha/Documents/Machine Coding/machine-coding-practice/src/services/submissionService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:8080/api/submissions';\n\nexport const submissionService = {\n    evaluateSolution: async (problemId, submissionData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/evaluate/${problemId}`, {\n                code: submissionData.code,\n                functionalRequirements: submissionData.functionalRequirements || \"\"\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Evaluation error:', error);\n            throw error;\n        }\n    },\n\n    testConnection: async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}/test`);\n            return response.data;\n        } catch (error) {\n            console.error('Test connection error:', error);\n            throw error;\n        }\n    }\n};\n\nexport default submissionService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uCAAuC;AAExD,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,gBAAgB,EAAE,MAAAA,CAAOC,SAAS,EAAEC,cAAc,KAAK;IACnD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,QAAQ,aAAaG,SAAS,EAAE,EAAE;QACnEI,IAAI,EAAEH,cAAc,CAACG,IAAI;QACzBC,sBAAsB,EAAEJ,cAAc,CAACI,sBAAsB,IAAI;MACrE,CAAC,EAAE;QACCC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC;MACF,OAAOJ,QAAQ,CAACK,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDE,cAAc,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACe,GAAG,CAAC,GAAGd,QAAQ,OAAO,CAAC;MACpD,OAAOK,QAAQ,CAACK,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC;AAED,eAAeV,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}