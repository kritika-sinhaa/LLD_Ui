{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:8080/api/submissions';\nexport const submissionService = {\n  evaluateSolution: async (problemId, submissionData) => {\n    try {\n      console.log('Making API call to:', `${BASE_URL}/evaluate/${problemId}`);\n      console.log('With data:', submissionData);\n      const response = await axios.post(`${BASE_URL}/evaluate/${problemId}`, {\n        code: submissionData.code,\n        functionalRequirements: submissionData.functionalRequirements || \"\"\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      console.log('Raw API response:', response);\n      console.log('Response data:', response.data);\n      if (!response.data) {\n        throw new Error('Empty response received from server');\n      }\n\n      // Validate the response data\n      const data = response.data;\n      if (!data.score && data.score !== 0) {\n        console.error('Invalid response format - missing score:', data);\n        throw new Error('Invalid response format from server');\n      }\n      return data;\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Evaluation error:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        config: error.config // This will show the request details\n      });\n      throw error;\n    }\n  },\n  executeSolution: async submissionData => {\n    try {\n      const response = await axios.post(`${BASE_URL}/execute`, submissionData);\n      return response.data;\n    } catch (error) {\n      console.error('Execution error:', error);\n      throw error;\n    }\n  },\n  testConnection: async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/test`);\n      return response.data;\n    } catch (error) {\n      console.error('Test connection error:', error);\n      throw error;\n    }\n  }\n};\nexport default submissionService;","map":{"version":3,"names":["axios","BASE_URL","submissionService","evaluateSolution","problemId","submissionData","console","log","response","post","code","functionalRequirements","headers","data","Error","score","error","_error$response","_error$response2","message","status","config","executeSolution","testConnection","get"],"sources":["/Users/kritika.sinha/Documents/Machine Coding/machine-coding-practice/src/services/submissionService.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://localhost:8080/api/submissions';\n\nexport const submissionService = {\n    evaluateSolution: async (problemId, submissionData) => {\n        try {\n            console.log('Making API call to:', `${BASE_URL}/evaluate/${problemId}`);\n            console.log('With data:', submissionData);\n            \n            const response = await axios.post(`${BASE_URL}/evaluate/${problemId}`, {\n                code: submissionData.code,\n                functionalRequirements: submissionData.functionalRequirements || \"\"\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            });\n            \n            console.log('Raw API response:', response);\n            console.log('Response data:', response.data);\n            \n            if (!response.data) {\n                throw new Error('Empty response received from server');\n            }\n            \n            // Validate the response data\n            const data = response.data;\n            if (!data.score && data.score !== 0) {\n                console.error('Invalid response format - missing score:', data);\n                throw new Error('Invalid response format from server');\n            }\n            \n            return data;\n        } catch (error) {\n            console.error('Evaluation error:', {\n                message: error.message,\n                response: error.response?.data,\n                status: error.response?.status,\n                config: error.config // This will show the request details\n            });\n            throw error;\n        }\n    },\n\n    executeSolution: async (submissionData) => {\n        try {\n            const response = await axios.post(`${BASE_URL}/execute`, submissionData);\n            return response.data;\n        } catch (error) {\n            console.error('Execution error:', error);\n            throw error;\n        }\n    },\n\n    testConnection: async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}/test`);\n            return response.data;\n        } catch (error) {\n            console.error('Test connection error:', error);\n            throw error;\n        }\n    }\n};\n\nexport default submissionService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uCAAuC;AAExD,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,gBAAgB,EAAE,MAAAA,CAAOC,SAAS,EAAEC,cAAc,KAAK;IACnD,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,GAAGN,QAAQ,aAAaG,SAAS,EAAE,CAAC;MACvEE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,cAAc,CAAC;MAEzC,MAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,QAAQ,aAAaG,SAAS,EAAE,EAAE;QACnEM,IAAI,EAAEL,cAAc,CAACK,IAAI;QACzBC,sBAAsB,EAAEN,cAAc,CAACM,sBAAsB,IAAI;MACrE,CAAC,EAAE;QACCC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC;MAEFN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;MAC1CF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,CAACK,IAAI,CAAC;MAE5C,IAAI,CAACL,QAAQ,CAACK,IAAI,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MAC1D;;MAEA;MACA,MAAMD,IAAI,GAAGL,QAAQ,CAACK,IAAI;MAC1B,IAAI,CAACA,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,KAAK,CAAC,EAAE;QACjCT,OAAO,CAACU,KAAK,CAAC,0CAA0C,EAAEH,IAAI,CAAC;QAC/D,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;MAC1D;MAEA,OAAOD,IAAI;IACf,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA;MACZZ,OAAO,CAACU,KAAK,CAAC,mBAAmB,EAAE;QAC/BG,OAAO,EAAEH,KAAK,CAACG,OAAO;QACtBX,QAAQ,GAAAS,eAAA,GAAED,KAAK,CAACR,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI;QAC9BO,MAAM,GAAAF,gBAAA,GAAEF,KAAK,CAACR,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM;QAC9BC,MAAM,EAAEL,KAAK,CAACK,MAAM,CAAC;MACzB,CAAC,CAAC;MACF,MAAML,KAAK;IACf;EACJ,CAAC;EAEDM,eAAe,EAAE,MAAOjB,cAAc,IAAK;IACvC,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,QAAQ,UAAU,EAAEI,cAAc,CAAC;MACxE,OAAOG,QAAQ,CAACK,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDO,cAAc,EAAE,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMf,QAAQ,GAAG,MAAMR,KAAK,CAACwB,GAAG,CAAC,GAAGvB,QAAQ,OAAO,CAAC;MACpD,OAAOO,QAAQ,CAACK,IAAI;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC;AAED,eAAed,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}