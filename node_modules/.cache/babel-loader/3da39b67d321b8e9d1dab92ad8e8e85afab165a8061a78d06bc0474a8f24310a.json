{"ast":null,"code":"import api from '../api/axiosConfig';\nexport const authService = {\n  login: async credentials => {\n    try {\n      const response = await api.post('/api/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response3;\n      throw {\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed',\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        details: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n      };\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await api.post('/api/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data, _error$response5, _error$response6;\n      throw {\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Registration failed',\n        status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status,\n        details: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data\n      };\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","credentials","response","post","data","error","_error$response","_error$response$data","_error$response2","_error$response3","message","status","details","register","userData","_error$response4","_error$response4$data","_error$response5","_error$response6"],"sources":["/Users/kritika.sinha/Documents/machine-coding-practice/src/services/authService.js"],"sourcesContent":["import api from '../api/axiosConfig';\n\nexport const authService = {\n  login: async (credentials) => {\n    try {\n      const response = await api.post('/api/auth/login', credentials);\n      return response.data;\n    } catch (error) {\n      throw {\n        message: error.response?.data?.message || 'Login failed',\n        status: error.response?.status,\n        details: error.response?.data\n      };\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      const response = await api.post('/api/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      throw {\n        message: error.response?.data?.message || 'Registration failed',\n        status: error.response?.status,\n        details: error.response?.data\n      };\n    }\n  }\n};\n\nexport default authService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,oBAAoB;AAEpC,OAAO,MAAMC,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,iBAAiB,EAAEF,WAAW,CAAC;MAC/D,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACd,MAAM;QACJC,OAAO,EAAE,EAAAJ,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBG,OAAO,KAAI,cAAc;QACxDC,MAAM,GAAAH,gBAAA,GAAEH,KAAK,CAACH,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM;QAC9BC,OAAO,GAAAH,gBAAA,GAAEJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL;MAC3B,CAAC;IACH;EACF,CAAC;EAEDS,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,oBAAoB,EAAEW,QAAQ,CAAC;MAC/D,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAU,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACd,MAAM;QACJR,OAAO,EAAE,EAAAK,gBAAA,GAAAV,KAAK,CAACH,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBN,OAAO,KAAI,qBAAqB;QAC/DC,MAAM,GAAAM,gBAAA,GAAEZ,KAAK,CAACH,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBN,MAAM;QAC9BC,OAAO,GAAAM,gBAAA,GAAEb,KAAK,CAACH,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBd;MAC3B,CAAC;IACH;EACF;AACF,CAAC;AAED,eAAeL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}